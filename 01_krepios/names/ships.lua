My = My or {}

-- @see https://en.wikipedia.org/wiki/Japanese_ship-naming_conventions
-- @see https://en.wikipedia.org/wiki/88_modern_constellations_in_different_languages
-- @see https://en.wikipedia.org/wiki/List_of_proper_names_of_stars
-- @see https://enchantedlearning.com/wordlist/
-- @see https://www.fantasynamegenerators.com/

local asteroids = {
    -- asteroids
    -- @see https://en.wikipedia.org/wiki/List_of_exceptional_asteroids
    "Aase",
    "Achilles",
    "Adalberta",
    "Adelaide",
    "Akhenaten",
    "Alauda",
    "Albert",
    "Aletheia",
    "Alinda",
    "Amphitrite",
    "Amun",
    "Antiope",
    "Apophis",
    "Astraea",
    "Astronautica",
    "Aten",
    "Atira",
    "Auravictrix",
    "Aurora",
    "Bamberga",
    "Barklajdetolli",
    "Bennu",
    "Betulia",
    "Borrelly",
    "Braille",
    "Brucia",
    "Camenzind",
    "Camilla",
    "Castalia",
    "Ceres",
    "China",
    "Chiron",
    "Clivia",
    "Cincinnati",
    "Cruithne",
    "Cuno",
    "Cybele",
    "Dactyl",
    "Daphne",
    "David",
    "Dioretsa",
    "Diotima",
    "Doris",
    "Ducrosa",
    "Duende",
    "Dynamene",
    "Echeclus",
    "Echo",
    "Educatio",
    "Elst",
    "Egeria",
    "Eros",
    "Eugenia",
    "Eunomia",
    "Euphrosyne",
    "Eureka",
    "Europa",
    "Filatov",
    "Flora",
    "Fortuna",
    "Ganymed",
    "Gaspra",
    "Geraldina",
    "Glauke",
    "Gryphia",
    "Hal",
    "Halley",
    "Harmonia",
    "Harrington",
    "Hartley",
    "Hathor",
    "Hebe",
    "Hekate",
    "Hektor",
    "Herculina",
    "Herschel",
    "Hermione",
    "Hidalgo",
    "Hipparchus",
    "Hopi",
    "Hygiea",
    "Icarus",
    "Ida",
    "Interamnia",
    "Iris",
    "Itokawa",
    "Juno",
    "Kleopatra",
    "Khufu",
    "Kressmannia",
    "Lachesis",
    "Leonardo",
    "Lipperta",
    "Maritima",
    "Massalia",
    "Mathilde",
    "Melpomene",
    "Mentha",
    "Metis",
    "Miminko",
    "Moskva",
    "Musa",
    "Myriostos",
    "Nausikaa",
    "Nemesis",
    "Nyx",
    "Pallas",
    "Palma",
    "Panopaea",
    "Patientia",
    "Petrina",
    "Phaethon",
    "Piazzia",
    "Pizarro",
    "Psyche",
    "Quaoar",
    "Raup",
    "Rosalinde",
    "Rusthawelia",
    "Ryugu",
    "Sappho",
    "Schorria",
    "Sekhmet",
    "Selinur",
    "Selqet",
    "Shaposhnikov",
    "Steins",
    "Sumida",
    "Summanus",
    "Susi",
    "Sylva",
    "Tempel",
    "Themis",
    "Thisbe",
    "Thule",
    "Tolkien",
    "Toutatis",
    "Transvaalia",
    "Tulipa",
    "Undina",
    "Urania",
    "Ursula",
    "Varuna",
    "Veritas",
    "Vesta",
    "Virginia",
    "Virtanen",
    "Wilson",
    "Zhongguo",
}

local romanNumbers = {
    "I",
    "II",
    "III",
    "IV",
    "V",
    "VI",
    "VII",
    "VIII",
    "IX",
    "X",
    "XI",
}

local minerals = {
    -- @see https://en.wikipedia.org/wiki/List_of_minerals
    "Adamite",
    "Adelite",
    "Agate",
    "Ajoite",
    "Aksaite",
    "Albite",
    "Altaite",
    "Alum",
    "Alunite",
    "Amber",
    "Amesite",
    "Amicite",
    "Amosite",
    "Anatase",
    "Annite",
    "Apatite",
    "Arctite",
    "Ardaite",
    "Arsenic",
    "Asisite",
    "Augite",
    "Avalite",
    "Axinite",
    "Azurite",
    "Baotite",
    "Baryte",
    "Bauxite",
    "Bazzite",
    "Beryl",
    "Biotite",
    "Bismite",
    "Bismuth",
    "Bityite",
    "Bixbite",
    "Blodite",
    "Boleite",
    "Borax",
    "Bornite",
    "Brucite",
    "Cadmium",
    "Cahnite",
    "Calcite",
    "Celsian",
    "Cerite",
    "Cerium",
    "Chaoite",
    "Citrine",
    "Coesite",
    "Coltan",
    "Copper",
    "Corkite",
    "Cuprite",
    "Curite",
    "Cymrite",
    "Diamond",
    "Dickite",
    "Duftite",
    "Edenite",
    "Ekanite",
    "Elbaite",
    "Emerald",
    "Epidote",
    "Euclase",
    "Eveite",
    "Gahnite",
    "Galena",
    "Garnet",
    "Gedrite",
    "Geerite",
    "Gold",
    "Gypsum",
    "Hafnon",
    "Halite",
    "Hauyne",
    "Hessite",
    "Hoelite",
    "Hopeite",
    "Howlite",
    "Hubeite",
    "Humite",
    "Huntite",
    "Hyalite",
    "Ikaite",
    "Illite",
    "Ilvaite",
    "Indite",
    "Indium",
    "Inyoite",
    "Iolite",
    "Iranite",
    "Iridium",
    "Iron",
    "Jade",
    "Jadeite",
    "Jasper",
    "Jennite",
    "Jet",
    "Kainite",
    "Kankite",
    "Kanoite",
    "Karlite",
    "Kassite",
    "Keilite",
    "Kernite",
    "Keyite",
    "Kinoite",
    "Kochite",
    "Krotite",
    "Kunzite",
    "Kyanite",
    "Langite",
    "Larimar",
    "Larnite",
    "Laurite",
    "Lautite",
    "Lead",
    "Leifite",
    "Leucite",
    "Levyne",
    "Lignite",
    "Marrite",
    "Mellite",
    "Mercury",
    "Mica",
    "Minium",
    "Mixite",
    "Mohite",
    "Mohrite",
    "Mullite",
    "Mundite",
    "Nacrite",
    "Natron",
    "Nickel",
    "Niobite",
    "Niter",
    "Nosean",
    "Nsutite",
    "Okenite",
    "Olgite",
    "Olivine",
    "Onyx",
    "Opal",
    "Osmium",
    "Otavite",
    "Painite",
    "Peridot",
    "Perite",
    "Perlite",
    "Petzite",
    "Piypite",
    "Pyrite",
    "Pyrope",
    "Quartz",
    "Raspite",
    "Realgar",
    "Reidite",
    "Rhodium",
    "Romeite",
    "Ruby",
    "Ruizite",
    "Rutile",
    "Santite",
    "Sard",
    "Schorl",
    "Silicon",
    "Silver",
    "Sinoite",
    "Sphene",
    "Spinel",
    "Suanite",
    "Sulfur",
    "Sylvite",
    "Taenite",
    "Talc",
    "Tantite",
    "Thorite",
    "Thulite",
    "Tin",
    "Topaz",
    "Trona",
    "Ulexite",
    "Umbite",
    "Upalite",
    "Uralite",
    "Urea",
    "Uricite",
    "Utahite",
    "Vaesite",
    "Vauxite",
    "Wardite",
    "Weilite",
    "Wiluite",
    "Wustite",
    "Xieite",
    "Zairite",
    "Zeolite",
    "Ziesite",
    "Zincite",
    "Zircon",
    "Zoisite",
    "Zorite",
    "Zunyite",
    "Zykaite",
}

My.asteroidName = function()
    return math.random(1, 2100) .. " " .. Util.random(asteroids)
end

My.minerName = function()
    return Util.random(asteroids) .. " " .. Util.random(minerals)
end

My.miningStationName = function()
    return Util.random(asteroids) .. " " .. Util.random(romanNumbers)
end

My.scienceStationName = function()
    return Util.random(Names.humanLastNamesScientific) .. " " .. Util.random(Names.greekAlphabet)
end

local japaneseLocations = {
    "Abashiri",
    "Abe",
    "Abukuma",
    "Adachi",
    "Agano",
    "Ahoro",
    "Aibiki",
    "Aichi",
    "Aikawa",
    "Aino",
    "Aizu",
    "Aka",
    "Akagi",
    "Akaishi",
    "Akan",
    "Akanagi",
    "Akashi",
    "Akita",
    "Akkeshi",
    "Amagasaki",
    "Amagi",
    "Ami",
    "Anano",
    "Aomori",
    "Apoi",
    "Arai",
    "Arakawa",
    "Arie",
    "Asahi",
    "Asahikawa",
    "Asama",
    "Ashibetsu",
    "Ashida",
    "Ashigara",
    "Aso",
    "Asuwa",
    "Atago",
    "Atsugi",
    "Azami",
    "Azuma",
    "Azumaya",
    "Bandai",
    "Bebetsu",
    "Beppirigai",
    "Bessan",
    "Betsukai",
    "Biei",
    "Biwa",
    "Bizan",
    "Bunagatake",
    "Bunkyo",
    "Chausu",
    "Chiba",
    "Chigasaki",
    "Chigogabaka",
    "Chikugo",
    "Chikuma",
    "Chiroro",
    "Chitose",
    "Chiyoda",
    "Chokai",
    "Chubetsu",
    "Chubu",
    "Chugoku",
    "Chuo",
    "Chuzenji",
    "Daibosatsu",
    "Daimaru",
    "Dainichi",
    "Daisen",
    "Dake",
    "Denjo",
    "Dodo",
    "Doton",
    "Dozan",
    "Eboshi",
    "Edo",
    "Edogawa",
    "Ehime",
    "Ena",
    "Eniwa",
    "Esaoman",
    "Fuji",
    "Fukui",
    "Fukuoka",
    "Fukushima",
    "Fukuyama",
    "Funabashi",
    "Fuppushi",
    "Furano",
    "Fure",
    "Furen",
    "Fushimi",
    "Futamata",
    "Gassan",
    "Gifu",
    "Gojome",
    "Gomadan",
    "Gonokawa",
    "Goryu",
    "Goshiki",
    "Goshogawara",
    "Goyo",
    "Gozaisho",
    "Gunma",
    "Gyoja",
    "Hachijo",
    "Hachiman",
    "Hachimen",
    "Hachimori",
    "Hachinohe",
    "Hachioji",
    "Hachiro",
    "Hakamagoshi",
    "Hakkyo",
    "Hako",
    "Hakodate",
    "Hakone",
    "Haku",
    "Hakusan",
    "Hakuun",
    "Hamamatsu",
    "Hamana",
    "Haruna",
    "Hibara",
    "Hiei",
    "Higashi",
    "Hii",
    "Hijiri",
    "Hikawa",
    "Hikone",
    "Hime",
    "Himeji",
    "Hino",
    "Hinokizuka",
    "Hirakata",
    "Hiratsuka",
    "Hiroo",
    "Hiroshima",
    "Hiru",
    "Hiuchi",
    "Hokkai",
    "Hokkaido",
    "Hokota",
    "Hokuchin",
    "Hongu",
    "Horohoro",
    "Hyakujo",
    "Hyogo",
    "Hyono",
    "Ibaraki",
    "Ibi",
    "Ibo",
    "Ibuki",
    "Iburi",
    "Ibusuki",
    "Ichinomiya",
    "Idonmappu",
    "Iide",
    "Iizuna",
    "Ikawa",
    "Ikeda",
    "Ikoma",
    "Inamura",
    "Inasa",
    "Inashiki",
    "Inawashiro",
    "Inba",
    "Inzai",
    "Io",
    "Iruma",
    "Isesaki",
    "Ishikari",
    "Ishikawa",
    "Ishioka",
    "Ishizuchi",
    "Itabashi",
    "Itako",
    "Iwahara",
    "Iwaki",
    "Iwakura",
    "Iwanai",
    "Iwate",
    "Izumi",
    "Izumo",
    "Jakuchi",
    "Jinzu",
    "Jizo",
    "Joetsu",
    "Joganji",
    "Jonen",
    "Jusan",
    "Kabutoyama",
    "Kagawa",
    "Kagoshima",
    "Kaikoma",
    "Kaimon",
    "Kako",
    "Kakogawa",
    "Kamitaki",
    "Kamo",
    "Kamui",
    "Kamuishiri",
    "Kanazawa",
    "Kanda",
    "Kanmuri",
    "Kannon",
    "Kansai",
    "Kanto",
    "Karakuni",
    "Karasawa",
    "Karasuo",
    "Karifuri",
    "Kasa",
    "Kasagata",
    "Kasatori",
    "Kashima",
    "Kashimayari",
    "Kashiwa",
    "Kasugai",
    "Kasukabe",
    "Kasumigaura",
    "Katagami",
    "Katsuma",
    "Katsura",
    "Katsuragi",
    "Katsushika",
    "Kawagoe",
    "Kawaguchi",
    "Kawasaki",
    "Keigetsu",
    "Kenashi",
    "Kenpi",
    "Kikuchi",
    "Kinka",
    "Kinokawa",
    "Kinpu",
    "Kirigamine",
    "Kisarazu",
    "Kishiwada",
    "Kiso",
    "Kisokoma",
    "Kita",
    "Kitahotaka",
    "Kitakami",
    "Kitakyushu",
    "Kitamata",
    "Kitami",
    "Kitaura",
    "Kizu",
    "Kobe",
    "Kochi",
    "Koetoi",
    "Kofu",
    "Koizumi",
    "Kokuba",
    "Koma",
    "Komagatake",
    "Komagome",
    "Komaki",
    "Kongo",
    "Koriyama",
    "Kosai",
    "Kosaka",
    "Koshigaya",
    "Koto",
    "Koyoshi",
    "Kuji",
    "Kuju",
    "Kuma",
    "Kumagaya",
    "Kumami",
    "Kumamoto",
    "Kumano",
    "Kumotori",
    "Kunimi",
    "Kurai",
    "Kurama",
    "Kurashiki",
    "Kure",
    "Kuro",
    "Kurobe",
    "Kurobegoro",
    "Kurume",
    "Kusatsu",
    "Kushida",
    "Kushiro",
    "Kussharo",
    "Kutcharo",
    "Kuttara",
    "Kuzuryu",
    "Kyoto",
    "Kyusan",
    "Kyushu",
    "Mabechi",
    "Machine",
    "Maebashi",
    "Maehotaka",
    "Maibara",
    "Makomanai",
    "Mamiya",
    "Maru",
    "Maruyama",
    "Mashu",
    "Matsuda",
    "Matsue",
    "Matsumoto",
    "Matsuyama",
    "Maya",
    "Meakan",
    "Meguro",
    "Mekunnai",
    "Memuro",
    "Midori",
    "Mie",
    "Mihara",
    "Miho",
    "Mikami",
    "Mikuni",
    "Mimi",
    "Mimuro",
    "Minako",
    "Minami",
    "Minamikoma",
    "Minato",
    "Misawa",
    "Mitake",
    "Mito",
    "Mitsuishi",
    "Miune",
    "Miwa",
    "Miya",
    "Miyagi",
    "Miyama",
    "Miyanoura",
    "Miyazaki",
    "Mogami",
    "Monbetsu",
    "Morappu",
    "Morioka",
    "Moriyama",
    "Moriyoshi",
    "Mu",
    "Muko",
    "Myojin",
    "Myoken",
    "Myoko",
    "Naeba",
    "Nagahama",
    "Nagamine",
    "Nagano",
    "Nagaoka",
    "Nagara",
    "Nagasaki",
    "Nagi",
    "Nagoya",
    "Naha",
    "Naka",
    "Nakadomari",
    "Nakama",
    "Nakano",
    "Nakaumi",
    "Nakayama",
    "Namegata",
    "Namewakka",
    "Nanao",
    "Nantai",
    "Nara",
    "Narita",
    "Nasu",
    "Natori",
    "Neishi",
    "Nemuro",
    "Nerima",
    "Neyagawa",
    "Niigata",
    "Niikappu",
    "Nikko",
    "Ninoto",
    "Nipesotsu",
    "Nishi",
    "Nishigatake",
    "Nishikawa",
    "Nishinomiya",
    "Nishinotori",
    "Nogohaku",
    "Nokogiri",
    "Norikura",
    "Notoro",
    "Nozuka",
    "Nukabira",
    "Nukata",
    "Numanohara",
    "Numazu",
    "Nupuri",
    "Nyu",
    "Oakan",
    "Obami",
    "Obihiro",
    "Odaigahara",
    "Odasshu",
    "Odawara",
    "Oga",
    "Ogata",
    "Ogawara",
    "Ogura",
    "Ogusu",
    "Ohata",
    "Oi",
    "Oirase",
    "Oita",
    "Oizuru",
    "Okaya",
    "Okayama",
    "Okazaki",
    "Okishimappu",
    "Okitama",
    "Okuhotaka",
    "Okumine",
    "Okutoppu",
    "Omitama",
    "Omono",
    "Omoto",
    "Omusha",
    "Onigajo",
    "Onishi",
    "Onnebetsu",
    "Ono",
    "Ontake",
    "Osaka",
    "Osasa",
    "Oshiki",
    "Osorakan",
    "Ota",
    "Otake",
    "Otenjo",
    "Otofuke",
    "Otsu",
    "Oyabe",
    "Oyama",
    "Oyodo",
    "Oze",
    "Ozora",
    "Pankenushi",
    "Pekerebetsu",
    "Penkenushi",
    "Petegari",
    "Pinneshiri",
    "Pipairo",
    "Pippu",
    "Piratokomi",
    "Pirigai",
    "Pirika",
    "Pisenai",
    "Pisshiri",
    "Piyashiri",
    "Poroshiri",
    "Raiden",
    "Rakko",
    "Rausu",
    "Rebun",
    "Rishiri",
    "Rokkasho",
    "Rokko",
    "Rubeshibe",
    "Rubetsune",
    "Ruchishi",
    "Rumoi",
    "Rutori",
    "Ryoun",
    "Ryuo",
    "Saba",
    "Saga",
    "Sagami",
    "Sagamihara",
    "Sahoro",
    "Saitama",
    "Sakae",
    "Sakai",
    "Sakaiminato",
    "Sakata",
    "Sakawa",
    "Sako",
    "Sakura",
    "Sakurajima",
    "Sannomine",
    "Sannosawa",
    "Sannoto",
    "Sanpo",
    "Santo",
    "Sapporo",
    "Saroma",
    "Saru",
    "Sasebo",
    "Satsunai",
    "Sefuri",
    "Seki",
    "Sen",
    "Senboku",
    "Sendai",
    "Senjo",
    "Seppiko",
    "Setagaya",
    "Shaka",
    "Shakka",
    "Shari",
    "Shibetsu",
    "Shibichari",
    "Shibuya",
    "Shiga",
    "Shikashinai",
    "Shikoku",
    "Shikotsu",
    "Shimane",
    "Shimanto",
    "Shimonoseki",
    "Shimosuwa",
    "Shinagawa",
    "Shinano",
    "Shinji",
    "Shinjuku",
    "Shinmachi",
    "Shinmoedake",
    "Shiomi",
    "Shirakami",
    "Shirane",
    "Shiraoi",
    "Shiretoko",
    "Shiribeshi",
    "Shiribetsu",
    "Shirouma",
    "Shisui",
    "Shisuniwa",
    "Shizunai",
    "Shizuoka",
    "Sho",
    "Shokanbetsu",
    "Shokotsu",
    "Shonai",
    "Shosha",
    "Shunbetsu",
    "Sobetsu",
    "Sobo",
    "Soematsu",
    "Soka",
    "Soya",
    "Suginami",
    "Suisho",
    "Suita",
    "Suketo",
    "Sumida",
    "Suribachi",
    "Suwa",
    "Taira",
    "Taishaku",
    "Taito",
    "Taka",
    "Takahashi",
    "Takamatsu",
    "Takami",
    "Takao",
    "Takarazuka",
    "Takasaki",
    "Takashima",
    "Takatsu",
    "Takatsuki",
    "Tama",
    "Tamiya",
    "Tanemaki",
    "Tanigawa",
    "Tanjo",
    "Tanzawa",
    "Tappukoppu",
    "Tara",
    "Tarumae",
    "Tate",
    "Tateshina",
    "Tazawa",
    "Tedori",
    "Tekari",
    "Tengu",
    "Tenjin",
    "Tenryu",
    "Teshikaga",
    "Teshio",
    "Thochigi",
    "To",
    "Tochigi",
    "Tohoku",
    "Tokachi",
    "Tokoro",
    "Tokorozawa",
    "Tokyo",
    "Tomamu",
    "Tomuraushi",
    "Tone",
    "Toshibetsu",
    "Toshima",
    "Tottabetsu",
    "Tottori",
    "Towada",
    "Toya",
    "Toyama",
    "Toyo",
    "Toyohashi",
    "Toyohira",
    "Toyonaka",
    "Toyoni",
    "Toyota",
    "Tsubakuro",
    "Tsuchiura",
    "Tsugaru",
    "Tsukuba",
    "Tsuruga",
    "Tsurugi",
    "Tsurumi",
    "Uchiichi",
    "Uenshiri",
    "Unabetsu",
    "Unzen",
    "Uonuma",
    "Upepesanke",
    "Urauchi",
    "Ushiro",
    "Usu",
    "Utsugi",
    "Utsunomiya",
    "Wakamatsu",
    "Wakayama",
    "Warusawa",
    "Washiba",
    "Yachiyo",
    "Yae",
    "Yahagi",
    "Yajuro",
    "Yake",
    "Yakushi",
    "Yamagata",
    "Yamato",
    "Yamizo",
    "Yao",
    "Yaoromappu",
    "Yari",
    "Yasu",
    "Yasugi",
    "Yatate",
    "Yodo",
    "Yokkaichi",
    "Yoko",
    "Yokohama",
    "Yokosuka",
    "Yonago",
    "Yonaha",
    "Yoneshiro",
    "Yoro",
    "Yoshii",
    "Yoshino",
    "Yotei",
    "Yubari",
    "Yubetsu",
    "Yufu",
    "Yumiori",
    "Yura",
    "Yuwan",
    "Zao",
    "Zenibako",

}

local japaneseCivilSuffix = {
    " Maru",
    "maru",
}

local neutralPrefix = {
    "Air",
    "April",
    "Aurora",
    "Beach",
    "Bird",
    "Blossom",
    "Care",
    "Cloud",
    "Daisy",
    "Day",
    "East",
    "Engine",
    "Evening",
    "Fair",
    "Fire",
    "Fish",
    "Flight",
    "Full",
    "Gold",
    "Good",
    "Goose",
    "Grace",
    "Hill",
    "Hope",
    "Ice",
    "Joy",
    "Lake",
    "Light",
    "Life",
    "Love",
    "Mark",
    "Meadow",
    "Merry",
    "Morning",
    "Money",
    "Moon",
    "Nautic",
    "New",
    "Night",
    "Ocean",
    "Photon",
    "Polar",
    "Power",
    "Prime",
    "Pure",
    "Rain",
    "Ring",
    "River",
    "Sail",
    "Sand",
    "Sea",
    "Sky",
    "Snow",
    "Speed",
    "Spring",
    "Star",
    "Steam",
    "Storm",
    "Sub",
    "Sun",
    "Swan",
    "Top",
    "Tidal",
    "Vapor",
    "Water",
    "Wave",
    "Wheel",
    "Whole",
    "Wing",
    "Wisdom",
    "Zone",
}

-- a suffix implying movement
local mobileSuffix = {
    "beam",
    "boat",
    "breaker",
    "breeze",
    "bringer",
    "bus",
    "canoe",
    "catcher",
    "chaser",
    "courser",
    "cruiser",
    "diver",
    "drifter",
    "floater",
    "galley",
    "liner",
    "lover",
    "orbiter",
    "racer",
    "raft",
    "rider",
    "runner",
    "shift",
    "ship",
    "shooner",
    "skiier",
    "skipper",
    "sloop",
    "speeder",
    "surfer",
    "swimmer",
    "tracker",
    "trawler",
    "trip",
    "velo",
    "vessel",
    "voyager",
    "walker",
    "weaver",
    "whisper",
    "yacht",
}
local neutralSuffix = {
    "back",
    "belly",
    "berry",
    "born",
    "burst",
    "deep",
    "dream",
    "gift",
    "giver",
    "lighter",
    "rose",
    "shadow",
    "shine",
    "song",
    "wish",
}

local immobileSuffix = {
    " Bay",
    "berg",
    "boro",
    "burg",
    "burgh",
    "bury",
    "bridge",
    "cester",
    " City",
    "comb",
    " County",
    "dale",
    "deen",
    "doon",
    "down",
    "fall",
    " Falls",
    "field",
    "for",
    "fort",
    "furt",
    "gate",
    "glen",
    "gren",
    " Grove",
    "ham",
    "haven",
    "harbor",
    " Heights",
    "heim",
    "hill",
    " Hills",
    "holm",
    "home",
    "hood",
    "horn",
    "ia",
    " Island",
    "key",
    "land",
    " Lake",
    "ley",
    "loch",
    "lodge",
    "minster",
    "more",
    "mont",
    "mouth",
    "on",
    "park",
    " Park",
    "peak",
    " Peaks",
    "polis",
    "port",
    "refuge",
    " Rock",
    "shire",
    "side",
    "son",
    " Springs",
    "stad",
    "stadt",
    "station",
    "ton",
    "topia",
    " Town",
    "vale",
    " Valley",
    "view",
    "ville",
    "water",
    "wich",
    "wood",
}

local piratePrefix = {
    "Adventure",
    "Ahoy",
    "Bermuda",
    "Broken Anchor",
    "Black Water",
    "Blood",
    "Blunderbuss",
    "Bone",
    "Booty",
    "Bounty",
    "Chest",
    "Corsair",
    "Crocodile",
    "Crimson Kraken",
    "Curse",
    "Cutthroat",
    "Dark",
    "Davy Jones",
    "Dead Crab",
    "Death",
    "Dry Rum",
    "Dubloon",
    "Eyepatch",
    "First Mate",
    "Golden Skull",
    "Grog",
    "John Silver",
    "Jolly Roger",
    "Lost",
    "Marauder",
    "Mermaid",
    "Monkey",
    "Parrot",
    "Pearl",
    "Old Pegleg",
    "Plunder",
    "Privateer",
    "Reaper",
    "Rotten Tooth",
    "Royal",
    "Rusty Cannon",
    "Saber",
    "Sandy",
    "Scar",
    "St Kitts",
    "Shark",
    "Silver Turtle",
    "Skeleton",
    "Skull",
    "Stormy",
    "Tortoise",
    "Tortuga",
    "Treasure",
    "Yellow Fever",
}

local pirateSuffix = {
    " Ait",
    " Atoll",
    " Ayre",
    " Bay",
    " Bight",
    " Buoy",
    " Cave",
    " Cavern",
    "Cap ",
    " Cay",
    " Coast",
    " Cove",
    " Enclave",
    " Gulf",
    " Hideout",
    " Island",
    " Isle",
    " Islet",
    " Lagoon",
    " Lighthouse",
    " Lookout",
    "Port ",
    " Reef",
    " Resort",
    " Shore",
    " Sanctuary",
    " Skerry",
}

local sinisterNames = {
    "Awilda",
    "Blackbeard",
    "Bonny",
    "Cavendish",
    "Ching Shih",
    "Drake",
    "Gan Ning",
    "Kidd",
    "L'Ollonais",
    "Morgan",
    "Satan",
    "Stoertebeker",
}

local pirateShipNouns = {
    "Anchor",
    "Armada",
    "Assault",
    "Bandit",
    "Bones",
    "Bounty",
    "Brawler",
    "Bride",
    "Buccaneer",
    "Butt",
    "Captain",
    "Cannon",
    "Chain",
    "Compass",
    "Corpse",
    "Dagger",
    "Deck",
    "Death",
    "Dubloon",
    "Dutchman",
    "Flag",
    "Fortune",
    "Jewell",
    "Killer",
    "King",
    "Knife",
    "Kraken",
    "Legend",
    "Marauder",
    "Nixie",
    "Omen",
    "Pearl",
    "Pillager",
    "Plank",
    "Plunderer",
    "Privateer",
    "Robber",
    "Queen",
    "Raider",
    "Retribution",
    "Revenge",
    "Roger",
    "Rose",
    "Saber",
    "Sailor",
    "Scurvy",
    "Seas",
    "Son",
    "Scimitar",
    "Sea Troll",
    "Siren",
    "Skull",
    "Storm",
    "Trident",
    "Typhoon",
    "Tyrant",
    "Villain",
    "Virtue",
}

My.civilianShipName = (function()
    local suffix = Util.appendTables(neutralSuffix, mobileSuffix)

    return function()
        local v = math.random(1, 3)
        if v == 1 then
            return Util.random(neutralPrefix) .. Util.random(suffix)
        elseif v == 2 then
            return Names.esperantishWord()
        else
            return Util.random(japaneseLocations) .. Util.random(japaneseCivilSuffix)
        end
    end
end)()

My.civilianStationName = (function()
    local suffix = Util.appendTables(neutralSuffix, immobileSuffix)

    return function()
        local v = math.random(1, 2)
        if v == 1 then
            return Util.random(neutralPrefix) .. Util.random(suffix)
        else
            return Names.esperantishWord()
        end
    end
end)()

My.pirateStationName = function()
    local prefix = Util.random(piratePrefix)
    local suffix = Util.random(pirateSuffix)

    if suffix:sub(-1) == " " then
        return suffix .. prefix
    else
        return prefix .. suffix
    end
end

My.pirateShipName = (function()
    local names = Util.appendTables(Names.greekNereids, sinisterNames)
    local scaryNouns = Util.appendTables(Names.scaryThing, Names.sinisterNouns)

    return function()
        local v = math.random(1, 3)
        if v == 1 then
            return Util.random(Names.sinisterAttribute) .. " " .. Util.random(pirateShipNouns)
        elseif v == 2 then
            return Names.possessive(Util.random(names)) .. " " .. Util.random(scaryNouns)
        else
            return Util.random(Names.sinisterAttribute) .. Util.random(mobileSuffix)
        end
    end
end)()